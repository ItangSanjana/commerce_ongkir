<?php

/**
 * @file
 * Defines Commerce RajaOngkir shipping method for Drupal Commerce.
 */

/**
 * Implements hook_help().
 */
function commerce_rajaongkir_help($path, $arg) {
  switch ($path) {
    case 'admin/help#commerce_rajaongkir':

    $output = FALSE;
    $filepath = dirname(__FILE__) . '/README.txt';

    if (file_exists($filepath)) {
      $readme = file_get_contents($filepath);
      $output = '<pre>' . $readme . '</pre>';
    }

    return $output;
  }
}

/**
 * Implements hook_menu().
 */
function commerce_rajaongkir_menu() {
  $items = array();

  $items['admin/commerce/config/shipping/methods/commerce-rajaongkir/edit'] = array(
    'title' => 'Edit',
    'description' => 'Configure Commerce RajaOngkir shipping method.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('commerce_rajaongkir_settings_form'),
    'access arguments' => array('administer shipping'),
    'file' => 'includes/commerce_rajaongkir.admin.inc',
    'type' => MENU_LOCAL_TASK,
    'context' => MENU_CONTEXT_INLINE,
  );

  return $items;
}

/**
 * Implements hook_commerce_shipping_method_info().
 */
function commerce_rajaongkir_commerce_shipping_method_info() {
  $shipping_methods = array();

  $shipping_methods['commerce_rajaongkir'] = array(
    'title' => t('Commerce RajaOngkir'),
    'description' => t('Integrates RajaOngkir shipping service API with Commerce shipping.'),
  );

  return $shipping_methods;
}

/**
 * Implements hook_commerce_shipping_service_info().
 */
function commerce_rajaongkir_commerce_shipping_service_info() {
  $couriers = array_diff(variable_get('commerce_rajaongkir_courier', array()), array(0));

  if (variable_get('commerce_rajaongkir_account_type') == 'starter') {
    $couriers = array_diff($couriers, array('ESL', 'PCP', 'RPX'));
  }

  $services = array_intersect_key(commerce_rajaongkir_service(), $couriers);
  $shipping_services = array();

  if ($services) {
    foreach ($services as $service) {
      foreach ($service as $key => $value) {
        $shipping_services[$key] = array(
          'title' => $value['service'],
          'display_title' => drupal_strtoupper($value['code']) . ' ' . $value['service'],
          'code' => $value['code'],
          'shipping_method' => 'commerce_rajaongkir',
          'callbacks' => array(
            'rate' => 'commerce_rajaongkir_service_rate',
          ),
        );
      }
      unset($key, $value);
    }
    unset($service);
  }

  return $shipping_services;
}

/**
 * @return
 *   Service option list.
 */
function commerce_rajaongkir_service() {
  $services = array(
    'ESL' => array(
      'ESL.RPX_RDX' => array('code' => t('esl'), 'service' => t('RPX/RDX')),
    ),
    'JNE' => array(
      'JNE.PELIK' => array('code' => t('jne'), 'service' => t('PELIK')),
      'JNE.CTCBDO' => array('code' => t('jne'), 'service' => t('CTCBDO')),
      'JNE.CTC' => array('code' => t('jne'), 'service' => t('CTC')),
      'JNE.CTCOKE' => array('code' => t('jne'), 'service' => t('CTCOKE')),
      'JNE.CTCSPS' => array('code' => t('jne'), 'service' => t('CTCSPS')),
      'JNE.CTCYES' => array('code' => t('jne'), 'service' => t('CTCYES')),
      'JNE.OKE' => array('code' => t('jne'), 'service' => t('OKE')),
      'JNE.REG' => array('code' => t('jne'), 'service' => t('REG')),
      'JNE.YES' => array('code' => t('jne'), 'service' => t('YES')),
      'JNE.SPS' => array('code' => t('jne'), 'service' => t('SPS')),
    ),
    'PCP' => array(
      'PCP.ECO' => array('code' => t('pcp'), 'service' => t('ECO')),
      'PCP.ONP' => array('code' => t('pcp'), 'service' => t('ONP')),
      'PCP.ONS' => array('code' => t('pcp'), 'service' => t('ONS')),
      'PCP.REG' => array('code' => t('pcp'), 'service' => t('REG')),
    ),
    'POS' => array(
      'POS.SURAT_KILAT' => array('code' => t('pos'), 'service' => t('Surat Kilat')),
      'POS.SURAT_KILAT_KHUSUS' => array('code' => t('pos'), 'service' => t('Surat Kilat Khusus')),
      'POS.EXPRESS_NEXT_DAY' => array('code' => t('pos'), 'service' => t('Express Next Day')),
      'POS.EMS_PRIORITY_DOCUMENT' => array('code' => t('pos'), 'service' => t('EMS Priority Document')),
      'POS.EMS_PRIORITY_MERCHANDISE' => array('code' => t('pos'), 'service' => t('EMS Priority Merchandise')),
      'POS.EMS_DOCUMENT' => array('code' => t('pos'), 'service' => t('EMS Document')),
      'POS.EMS_MERCHANDISE' => array('code' => t('pos'), 'service' => t('EMS Merchandise')),
      'POS.SURAT_R_LN' => array('code' => t('pos'), 'service' => t('Surat R LN')),
      'POS.PAKET_CEPAT' => array('code' => t('pos'), 'service' => t('Paket Cepat')),
      'POS.PAKET_BIASA' => array('code' => t('pos'), 'service' => t('Paket Biasa')),
      'POS.PREPAID_PARCEL' => array('code' => t('pos'), 'service' => t('Prepaid Parcel')),
    ),
    'RPX' => array(
      'RPX.SDP' => array('code' => t('rpx'), 'service' => t('SDP')),
      'RPX.MDP' => array('code' => t('rpx'), 'service' => t('MDP')),
      'RPX.NDP' => array('code' => t('rpx'), 'service' => t('NDP')),
      'RPX.RGP' => array('code' => t('rpx'), 'service' => t('RGP')),
      'RPX.REP' => array('code' => t('rpx'), 'service' => t('REP')),
    ),
    'TIKI' => array(
      'TIKI.SDS' => array('code' => t('tiki'), 'service' => t('SDS')),
      'TIKI.HDS' => array('code' => t('tiki'), 'service' => t('HDS')),
      'TIKI.ONS' => array('code' => t('tiki'), 'service' => t('ONS')),
      'TIKI.REG' => array('code' => t('tiki'), 'service' => t('REG')),
      'TIKI.ECO' => array('code' => t('tiki'), 'service' => t('ECO')),
      'TIKI.TDS' => array('code' => t('tiki'), 'service' => t('TDS')),
    ),
  );

  return $services;
}

/**
 * @param $shipping_service
 *   Selected shipping service.
 * @param $order
 *   Current order.
 * @return
 *   Calculated shipping rates for a given order.
 */
function commerce_rajaongkir_service_rate($shipping_service, $order) {
  module_load_include('inc', 'commerce_rajaongkir', 'includes/commerce_rajaongkir.restful');

  $order_wrapper = entity_metadata_wrapper('commerce_order', $order);
  $field_name = commerce_physical_order_shipping_field_name($order);

  if (!empty($order_wrapper->{$field_name}->commerce_customer_address)) {
    $address = $order_wrapper->{$field_name}->commerce_customer_address->value();
  }
  else {
    $address = array(
      'country' => '',
      'name_line' => '',
      'first_name' => '',
      'last_name' => '',
      'organisation_name' => '',
      'administrative_area' => '',
      'sub_administrative_area' => '',
      'locality' => '',
      'dependent_locality' => '',
      'postal_code' => '',
      'thoroughfare' => '',
      'premise' => '',
      'sub_premise' => '',
      'data' => '',
    );
  }

  $account_type = variable_get('commerce_rajaongkir_account_type', array());
  $locality = variable_get('commerce_rajaongkir_locality');
  $dependent_locality = variable_get('commerce_rajaongkir_dependent_locality');
  $shipping_origin = commerce_rajaongkir_locality($locality);
  $shipping_origin_type = 'city';
  $shipping_destination = commerce_rajaongkir_locality($address['locality']);
  $shipping_destination_type = 'city';
  $weight = commerce_physical_order_weight($order, 'g');
  $shipping_weight = $weight['weight'];
  $shipping_courier = $shipping_service['code'];
  $shipping_length = '';
  $shipping_width = '';
  $shipping_height = '';
  $shipping_diameter = '';

  if ($address['country'] == 'ID') {
    if ($account_type == 'pro') {
      $shipping_origin = commerce_rajaongkir_dependent_locality($locality, $dependent_locality);
      $shipping_origin_type = 'subdistrict';
      $shipping_destination = commerce_rajaongkir_dependent_locality($address['locality'], $address['dependent_locality']);
      $shipping_destination_type = 'subdistrict';
    }
    $cost = commerce_rajaongkir_restful_cost($shipping_origin, $shipping_origin_type, $shipping_destination, $shipping_destination_type, $shipping_weight, $shipping_courier, $shipping_length, $shipping_width, $shipping_height, $shipping_diameter);
  }
  else {
    if ($shipping_courier == 'pos' || $shipping_courier == 'tiki') {
      $shipping_destination = commerce_rajaongkir_country_code($address['country']);
      $cost = commerce_rajaongkir_restful_internationalcost($shipping_origin, $shipping_destination, $shipping_weight, $shipping_courier, $shipping_length, $shipping_width, $shipping_height);
    }
    else {
      $cost = FALSE;
    }
  }

  $rates = array();

  if ($cost) {
    if (isset($cost->data) && $cost->data) {
      $cost_data = drupal_json_decode($cost->data);
      $rajaongkir = $cost_data['rajaongkir'];
      $status = $rajaongkir['status'];

      if ($status['code'] == 200) {
        $results = $rajaongkir['results'];
        $currency_rates = isset($rajaongkir['currency']['value']) ? $rajaongkir['currency']['value'] : NULL;
        $rates_timeout = variable_get('commerce_rajaongkir_rates_timeout', 60);
        $rates = commerce_shipping_rates_cache_get('commerce_rajaongkir', $order, $rates_timeout);

        if (empty($rates)) {
          foreach ($results as $result) {
            foreach ($result['costs'] as $rcost) {
              if ($address['country'] == 'ID') {
                foreach ($rcost['cost'] as $rcost_cost) {
                  $rates[$rcost['service']] = array(
                    'amount' => commerce_currency_decimal_to_amount($rcost_cost['value'], 'IDR'),
                    'currency_code' => 'IDR',
                    'data' => array(),
                  );
                }
                unset($rcost_cost);
              }
              else {
                $rcost_rates = $rcost['cost'] * $currency_rates;
                $rcost_rates = ceil($rcost_rates);
                $rates[$rcost['service']] = array(
                  'amount' => commerce_currency_decimal_to_amount($rcost_rates, 'IDR'),
                  'currency_code' => 'IDR',
                  'data' => array(),
                );
              }
            }
            unset($rcost);
          }
          unset($result);

          commerce_shipping_rates_cache_set('commerce_rajaongkir', $order, $rates);
        }
      }
      else {
        if ($status['description']) {
          drupal_set_message(t('Shipping service warning: @warning', array('@warning' => $status['description'])), 'warning', FALSE);
        }
        else {
          drupal_set_message(t('HTTP request error: @error', array('@error' => $cost->error)), 'error', FALSE);
        }
      }
    }
    else {
      drupal_set_message(t('HTTP request error: @error', array('@error' => $cost->error)), 'error', FALSE);
    }
  }

  return isset($rates[$shipping_service['title']]) ? $rates[$shipping_service['title']] : FALSE;
}

/**
 * @param $country
 *   Selected country.
 * @return
 *   Code for selected country.
 */
function commerce_rajaongkir_country_code($country) {
  module_load_include('inc', 'commerce_rajaongkir', 'includes/commerce_rajaongkir.country');

  $countries = commerce_rajaongkir_country();
  $country_code = FALSE;

  if ($country) {
    $country_code = $countries[$country];
  }

  return $country_code;
}

/**
 * @param $locality
 *   Selected Locality.
 * @return
 *   Code for selected Locality.
 */
function commerce_rajaongkir_locality($locality) {
  module_load_include('inc', 'commerce_rajaongkir', 'includes/commerce_rajaongkir.locality_block_list');

  $locality_blocks = commerce_rajaongkir_locality_block();
  $locality_code = FALSE;

  if ($locality) {
    $code = array();

    foreach ($locality_blocks as $locality_block) {
      foreach ($locality_block as $localities => $dependent_localities) {
        $code[$localities] = $dependent_localities;
      }
      unset($localities, $dependent_localities);
    }
    unset($locality_block);

    $code = array_keys($code);
    sort($code);
    array_unshift($code, '');
    unset($code[0]);
    $code = array_flip($code);
    $locality_code = $code[$locality];
  }

  return $locality_code;
}

/**
 * @param $locality
 *   Selected Locality.
 * @param $dependent_locality
 *   Selected dependent locality.
 * @return
 *   Code for selected dependent locality.
 */
function commerce_rajaongkir_dependent_locality($locality, $dependent_locality) {
  module_load_include('inc', 'commerce_rajaongkir', 'includes/commerce_rajaongkir.locality_block_list');

  $locality_blocks = commerce_rajaongkir_locality_block();
  $dependent_locality_code = FALSE;

  if ($locality && $dependent_locality) {
    $code = array();

    foreach ($locality_blocks as $locality_block) {
      foreach ($locality_block as $localities => $dependent_localities) {
        $code[$localities] = $dependent_localities;
      }
      unset($localities, $dependent_localities);
    }
    unset($locality_block);

    $dependent_locality_code = $code[$locality][$dependent_locality];
  }

  return $dependent_locality_code;
}
